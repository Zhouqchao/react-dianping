{"version":3,"sources":["redux/modules/entities/orders.js","redux/modules/entities/products.js","utils/createReducer.js","redux/modules/entities/shops.js","redux/modules/login.js","redux/modules/entities/keywords.js","redux/modules/detail.js","redux/modules/search.js","redux/modules/user.js","utils/request.js","utils/url.js","redux/modules/home.js","redux/modules/purchase.js","redux/middlewares/callAPI.js","redux/modules/entities/comments.js","redux/modules/entities/index.js","redux/modules/app.js","redux/modules/index.js","redux/store.js","components/ErrorToast/index.js","components/PrivateRoute/index.js","components/AsyncComponent/index.js","containers/App/index.js","index.js"],"names":["schema","id","name","ORDER_TYPES","ALL","CONSUMED","TO_PAY","AVAILABLE","REFUND","types","PATCH_ORDER_REQUEST","PATCH_ORDER_SUCCESS","PATCH_ORDER_FAILURE","actions","patchOrder","orderId","commentId","callAPI","patch","url","mainReducer","createReducer","reducer","state","action","type","ADD_COMMENT","ADD_ORDER","order","getOrders","entities","orders","getProductDetail","product","products","detail","purchaseNotes","response","getShopById","shops","initialState","password","username","localStorage","getItem","logged","isFetching","loginFailure","error","login","dispatch","getState","post","then","setUsername","setPassword","logout","storeLoginStatus","setItem","clearLoginStatus","removeItem","getUsername","getPassword","getLogged","relatedShop","fetchProduct","get","productSchema","fetchShopById","getShop","shopSchema","getProduct","getRelatedShop","productId","shopId","nearestShop","combineReducers","text","histories","keywords","ids","searchedShopsByKeyword","setText","clearText","addSearchHistory","clearSearchHistory","fetchSearchKeywords","keywordSchema","getSearchKeywords","fetchSearchedShops","keyword","shouldCallAPI","search","getSearchedShops","payload","searchedShopsReducer","filter","item","time","Date","now","getText","getSearchHistories","map","currentSearched","getCurrentKeyword","currentTab","showConfirm","isShowCommentSection","currentOrder","isDeleting","isCommenting","comment","star","resetCurrentOrder","deleteOrder","remove","showCommentSection","hideCommentSection","setComment","setStar","postCommentRequest","postCommentSuccess","commentOrder","commentObj","addComment","setCurrentTab","tab","setShowConfirm","isShow","setCurrentOrderId","setCurrentOrderCommentId","newIds","currentOrderId","find","orderTypes","getCurrentTab","user","getCurrentOrder","getIsFetching","createSelector","getAllOrders","_orders","getShowConfirm","getIsShowCommentSection","getStar","comments","getComment","ajax","axios","create","headers","Accept","timeout","interceptors","request","use","config","Promise","reject","handleResponse","err","includes","status","resolve","data","message","params","delete","getProductList","path","page","pageSize","addOrder","likes","pageCount","discounts","homeActions","fetchLikes","currentPage","home","fetchDiscounts","concat","getLikes","getDiscounts","getLikesPageCount","getIsFetchingLikes","quantity","isShowTip","isLoading","setOrderQuantity","hideTip","submitOrder","purchase","totalPrice","currentPrice","toFixed","text1","text2","validityPeriod","statusText","orderPicUrl","picture","channel","category","title","shop","catch","getOrderQuantity","getIsShowTip","getTotalPrice","normalizeData","obj","Array","isArray","forEach","push","clearError","getError","app","store","createLogger","createStore","rootReducer","applyMiddleware","thunkMiddleware","next","length","every","Error","requestType","successType","failureType","Object","assign","ErrorToast","msg","this","props","className","timer","setTimeout","clearTimeout","Component","PrivateRoute","children","rest","render","location","to","pathname","from","connect","AsyncComponent","importComponent","Comp","module","setState","default","Home","ProductDetail","Search","SearchResult","Login","User","Purchase","App","appActions","basename","process","React","bindActionCreators","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fd15a88c.chunk.js","sourcesContent":["import createReducer from \"../../../utils/createReducer\";\nimport { patch } from \"../../../utils/request\";\nimport url from \"../../../utils/url\";\n\nexport const schema = {\n  id: \"id\",\n  name: \"orders\"\n};\n\nexport const ORDER_TYPES = {\n  ALL: 0,\n  CONSUMED: 1, // 已消费\n  TO_PAY: 2, // 待付款\n  AVAILABLE: 3, // 可使用\n  REFUND: 4 // 退款\n};\n\n// actions\nconst types = {\n  // 修改订单（给订单添加评论id）\n  PATCH_ORDER_REQUEST: \"ORDERS/patch_ORDER_REQUEST\",\n  PATCH_ORDER_SUCCESS: \"ORDERS/patch_ORDER_SUCCESS\",\n  PATCH_ORDER_FAILURE: \"ORDERS/patch_ORDER_FAILURE\"\n};\n\nexport const actions = {\n  // 添加评价到订单中\n  patchOrder: (orderId, commentId) => ({\n    types: [\n      types.PATCH_ORDER_REQUEST,\n      types.PATCH_ORDER_SUCCESS,\n      types.PATCH_ORDER_FAILURE\n    ],\n    callAPI: () => patch(url.patchOrder(orderId), { commentId })\n  })\n};\n\n// reducers\nconst mainReducer = createReducer(schema.name);\n\nconst reducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.ADD_COMMENT:\n      return {\n        ...state,\n        [action.id]: {\n          ...state[action.id],\n          commentId: action.commentId\n        }\n      };\n    case types.ADD_ORDER:\n      return {\n        ...state,\n        [action.id]: {\n          ...action.order,\n          id: action.id\n        }\n      };\n    case types.PATCH_ORDER_REQUEST:\n    case types.PATCH_ORDER_SUCCESS:\n    case types.PATCH_ORDER_FAILURE:\n      return state;\n    default:\n      return mainReducer(state, action);\n  }\n};\n\nexport default reducer;\n\n// selectors\nexport const getOrders = state => state.entities.orders;\n","import createReducer from \"../../../utils/createReducer\";\n\nexport const schema = {\n  id: \"id\",\n  name: \"products\"\n};\n\nconst reducer = createReducer(schema.name);\n\nexport default reducer;\n\n// selectors\nexport const getProductDetail = (state, id) => {\n  const product = state.entities.products[id];\n  return product && product.detail && product.purchaseNotes ? product : null;\n};\n","const createReducer = name => {\n  return (state = {}, action) => {\n    if (action.response && action.response[name]) {\n      return { ...state, ...action.response[name] };\n    }\n\n    return state;\n  };\n};\n\nexport default createReducer;\n","import createReducer from \"../../../utils/createReducer\";\nexport const schema = {\n  id: \"id\",\n  name: \"shops\"\n};\n\nconst reducer = createReducer(schema.name);\n\nexport default reducer;\n\n// selectors\nexport const getShopById = (state, id) => state.entities.shops[id];\n","import { post } from \"../../utils/request\";\nimport url from \"../../utils/url\";\n// state\nconst initialState = {\n  password: \"\",\n  // 读取登录状态\n  username: localStorage.getItem(\"username\") || \"\",\n  logged: localStorage.getItem(\"logged\") || false,\n  isFetching: false\n};\n\n// actions\nexport const types = {\n  // 登录\n  LOGIN_REQUEST: \"LOGIN_REQUEST\",\n  LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\n  LOGIN_FAILURE: \"LOGIN_FAILURE\",\n  // 退出\n  LOGOUT: \"LOGOUT\",\n  // 设置用户名和密码\n  SET_USERNAME: \"SET_USERNAME\",\n  SET_PASSWORD: \"SET_PASSWORD\"\n};\n\nexport const actions = {\n  loginFailure: error => ({ type: types.LOGIN_FAILURE, error }),\n  login: () => {\n    return (dispatch, getState) => {\n      // 表单验证\n      const { username, password } = getState().login;\n      dispatch({ type: types.LOGIN_REQUEST });\n\n      if (username && password) {\n        dispatch({ type: types.LOGIN_REQUEST });\n\n        return post(url.login(), { username, password }).then(\n          ({ username }) =>\n            dispatch({\n              type: types.LOGIN_SUCCESS,\n              username: username\n            }),\n          error => dispatch({ type: types.LOGIN_FAILURE, error })\n        );\n      } else {\n        return dispatch(actions.loginFailure(\"用户名和密码不能为空！\"));\n      }\n    };\n  },\n  setUsername: username => ({ type: types.SET_USERNAME, username }),\n  setPassword: password => ({ type: types.SET_PASSWORD, password }),\n  logout: () => ({ type: types.LOGOUT })\n};\n\n// 缓存登录状态\nconst storeLoginStatus = ({ username, logged }) => {\n  localStorage.setItem(\"logged\", logged);\n  localStorage.setItem(\"username\", username);\n};\n\n// 清除登录状态\nconst clearLoginStatus = () => {\n  localStorage.removeItem(\"logged\");\n  localStorage.removeItem(\"username\");\n};\n\n// reducers\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LOGIN_REQUEST:\n      return {\n        ...state,\n        isFetching: true\n      };\n    case types.LOGIN_SUCCESS:\n      storeLoginStatus({ username: action.username, logged: true });\n      return {\n        ...state,\n        isFetching: false,\n        logged: true\n      };\n    case types.LOGIN_FAILURE:\n      return {\n        ...state,\n        isFetching: false,\n        logged: false\n      };\n    case types.LOGOUT:\n      clearLoginStatus();\n      return {\n        ...state,\n        username: \"\",\n        password: \"\",\n        logged: false\n      };\n    case types.SET_USERNAME:\n      return {\n        ...state,\n        username: action.username\n      };\n    case types.SET_PASSWORD:\n      return {\n        ...state,\n        password: action.password\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n\n// selectors\nexport const getUsername = state => state.login.username;\nexport const getPassword = state => state.login.password;\nexport const getLogged = state => state.login.logged;\n","import createReducer from \"../../../utils/createReducer\";\n\nexport const schema = {\n  id: \"id\",\n  name: \"keywords\"\n};\n\nconst reducer = createReducer(schema.name);\n\nexport default reducer;\n","import { get } from \"../../utils/request\";\nimport url from \"../../utils/url\";\nimport { combineReducers } from \"redux\";\nimport { schema as shopSchema, getShopById } from \"./entities/shops\";\nimport { schema as productSchema, getProductDetail } from \"./entities/products\";\n\n// state\nconst initialState = {\n  product: {\n    isFetching: false,\n    id: null\n  },\n  relatedShop: {\n    isFetching: false,\n    id: null\n  }\n};\n\n// actions\nconst types = {\n  // 获取产品详情\n  FETCH_PRODUCT_REQUEST: \"DETAIL/FETCH_PRODUCT_REQUEST\",\n  FETCH_PRODUCT_SUCCESS: \"DETAIL/FETCH_PRODUCT_SUCCESS\",\n  FETCH_PRODUCT_ERROR: \"DETAIL/FETCH_PRODUCT_ERROR\",\n  // 获取附近店铺\n  FETCH_SHOP_REQUEST: \"DETAIL/FETCH_SHOP_REQUEST\",\n  FETCH_SHOP_SUCCESS: \"DETAIL/FETCH_SHOP_SUCCESS\",\n  FETCH_SHOP_ERROR: \"DETAIL/FETCH_SHOP_ERROR\"\n};\n\nexport const actions = {\n  // 获取产品详情\n  fetchProduct: id => ({\n    types: [\n      types.FETCH_PRODUCT_REQUEST,\n      types.FETCH_PRODUCT_SUCCESS,\n      types.FETCH_PRODUCT_ERROR\n    ],\n    callAPI: () => get(url.getProductDetail(id)),\n    schema: productSchema\n  }),\n  // 获取附近店铺\n  fetchShopById: id => ({\n    types: [\n      types.FETCH_SHOP_REQUEST,\n      types.FETCH_SHOP_SUCCESS,\n      types.FETCH_SHOP_ERROR\n    ],\n    callAPI: () => get(url.getShop(id)),\n    schema: shopSchema\n  })\n};\n\n// reducers\nconst productReducer = (state = initialState.product, action) => {\n  switch (action.type) {\n    case types.FETCH_PRODUCT_REQUEST:\n      return {\n        ...state,\n        isFetching: true\n      };\n    case types.FETCH_PRODUCT_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        id: action.id\n      };\n    case types.FETCH_PRODUCT_ERROR:\n      return {\n        ...state,\n        isFetching: false,\n        id: null\n      };\n    default:\n      return state;\n  }\n};\n\nconst relatedShopReducer = (state = initialState.relatedShop, action) => {\n  switch (action.type) {\n    case types.FETCH_SHOP_REQUEST:\n      return {\n        ...state,\n        isFetching: true\n      };\n    case types.FETCH_SHOP_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        id: action.id\n      };\n    case types.FETCH_SHOP_ERROR:\n      return {\n        ...state,\n        isFetching: false,\n        id: null\n      };\n    default:\n      return state;\n  }\n};\n\n// selectors\nexport const getProduct = (state, id) => getProductDetail(state, id);\n\nexport const getRelatedShop = (state, productId) => {\n  const product = state.entities.products[productId];\n  const shopId = product ? product.nearestShop : null;\n  if (shopId) {\n    return getShopById(state, shopId);\n  }\n\n  return null;\n};\n\nexport default combineReducers({\n  product: productReducer,\n  relatedShop: relatedShopReducer\n});\n","import { combineReducers } from \"redux\";\nimport { get } from \"../../utils/request\";\nimport url from \"../../utils/url\";\nimport { schema as keywordSchema } from \"./entities/keywords\";\nimport { schema as shopSchema } from \"./entities/shops\";\n\n// state\nconst initialState = {\n  text: \"\",\n  histories: [],\n  keywords: {\n    isFetching: false,\n    ids: []\n  },\n  // {\n  //   \"火锅\": {\n  //     isFetching: false,\n  //       ids: []\n  //   }\n  // }\n  searchedShopsByKeyword: {}\n};\n\n// actions\nconst types = {\n  // 设置搜索文本\n  SET_TEXT: \"SEARCH/SET_TEXT\",\n  CLEAR_TEXT: \"SEARCH/CLEAR_TEXT\",\n  // 添加搜索历史\n  ADD_SEARCH_HISTORY: \"SEARCH/ADD_SEARCH_HISTORY\",\n  // 清除搜索历史\n  CLEAR_SEARCH_HISTORY: \"SEARCH/CLEAR_SEARCH_HISTORY\",\n  // 获取搜索热门关键词\n  FETCH_SEARCH_KEYWORDS_REQUEST: \"SEARCH/FETCH_SEARCH_KEYWORDS_REQUEST\",\n  FETCH_SEARCH_KEYWORDS_SUCCESS: \"SEARCH/FETCH_SEARCH_KEYWORDS_SUCCESS\",\n  FETCH_SEARCH_KEYWORDS_FAILURE: \"SEARCH/FETCH_SEARCH_KEYWORDS_FAILURE\",\n  // 根据关键词查询店铺\n  FETCH_SEARCHED_SHOPS_REQUEST: \"FETCH_SEARCHED_SHOPS_REQUEST\",\n  FETCH_SEARCHED_SHOPS_SUCCESS: \"FETCH_SEARCHED_SHOPS_SUCCESS\",\n  FETCH_SEARCHED_SHOPS_FAILURE: \"FETCH_SEARCHED_SHOPS_FAILURE\"\n};\n\nexport const actions = {\n  setText: text => ({\n    type: types.SET_TEXT,\n    text\n  }),\n  clearText: () => ({\n    type: types.CLEAR_TEXT\n  }),\n  // 添加搜索历史\n  addSearchHistory: text => ({\n    type: types.ADD_SEARCH_HISTORY,\n    text\n  }),\n  // 清除搜索历史\n  clearSearchHistory: () => ({\n    type: types.CLEAR_SEARCH_HISTORY\n  }),\n  // 获取搜索热门关键词\n  fetchSearchKeywords: () => ({\n    types: [\n      types.FETCH_SEARCH_KEYWORDS_REQUEST,\n      types.FETCH_SEARCH_KEYWORDS_SUCCESS,\n      types.FETCH_SEARCH_KEYWORDS_FAILURE\n    ],\n    schema: keywordSchema,\n    callAPI: () => get(url.getSearchKeywords())\n  }),\n  // 获取根据关键词搜索的店铺\n  fetchSearchedShops: keyword => {\n    return {\n      types: [\n        types.FETCH_SEARCHED_SHOPS_REQUEST,\n        types.FETCH_SEARCHED_SHOPS_SUCCESS,\n        types.FETCH_SEARCHED_SHOPS_FAILURE\n      ],\n      schema: shopSchema,\n      shouldCallAPI: state => !state.search.searchedShopsByKeyword[keyword],\n      callAPI: () => get(url.getSearchedShops(keyword)),\n      payload: { text: keyword }\n    };\n  }\n};\n\n// reducers\nconst textReducer = (state = initialState.text, action) => {\n  switch (action.type) {\n    case types.SET_TEXT:\n      return action.text;\n    case types.CLEAR_TEXT:\n      return \"\";\n    default:\n      return state;\n  }\n};\n\nconst historiesReducer = (state = initialState.histories, action) => {\n  switch (action.type) {\n    case types.ADD_SEARCH_HISTORY:\n      // 过滤出与新增的文字不相同的搜索记录\n      const histories = state.filter(item => item.text !== action.text);\n\n      return [{ text: action.text, time: Date.now() }, ...histories];\n    case types.CLEAR_SEARCH_HISTORY:\n      return [];\n    default:\n      return state;\n  }\n};\n\nconst keywordsReducer = (state = initialState.keywords, action) => {\n  switch (action.type) {\n    case types.FETCH_SEARCH_KEYWORDS_REQUEST:\n      return { ...state, isFetching: true };\n    case types.FETCH_SEARCH_KEYWORDS_SUCCESS:\n      return { ...state, isFetching: false, ids: [...action.response.ids] };\n    case types.FETCH_SEARCH_KEYWORDS_FAILURE:\n      return { ...state, isFetching: false, ids: [] };\n    default:\n      return state;\n  }\n};\n\nconst searchedShopsByKeywordReducer = (\n  state = initialState.searchedShopsByKeyword,\n  action\n) => {\n  switch (action.type) {\n    case types.FETCH_SEARCHED_SHOPS_REQUEST:\n    case types.FETCH_SEARCHED_SHOPS_SUCCESS:\n    case types.FETCH_SEARCHED_SHOPS_FAILURE:\n      return {\n        ...state,\n        [action.text]: searchedShopsReducer(state[action.text], action)\n      };\n    default:\n      return state;\n  }\n};\n\nconst searchedShopsReducer = (\n  state = { isFetching: false, ids: [] },\n  action\n) => {\n  switch (action.type) {\n    case types.FETCH_SEARCHED_SHOPS_REQUEST:\n      return { ...state, isFetching: true };\n    case types.FETCH_SEARCHED_SHOPS_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        ids: action.response.ids\n      };\n    case types.FETCH_SEARCHED_SHOPS_FAILURE:\n      return { ...state, isFetching: false };\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  text: textReducer,\n  histories: historiesReducer,\n  keywords: keywordsReducer,\n  searchedShopsByKeyword: searchedShopsByKeywordReducer\n});\n\n// selectors\nexport const getText = state => state.search.text;\nexport const getSearchHistories = state => state.search.histories;\nexport const getSearchKeywords = state =>\n  state.search.keywords.ids.map(id => state.entities.keywords[id]);\nexport const getSearchedShops = state => {\n  const currentSearched = state.search.histories[0];\n  if (!currentSearched) {\n    return [];\n  }\n\n  const searchedShopIds =\n    state.search.searchedShopsByKeyword[currentSearched.text].ids;\n\n  return searchedShopIds.map(id => state.entities.shops[id]);\n};\nexport const getCurrentKeyword = state => {\n  const keyword = state.search.histories[0];\n  return keyword ? keyword.text : \"\";\n};\n","import { createSelector } from \"reselect\";\nimport { combineReducers } from \"redux\";\nimport { get, post, remove } from \"../../utils/request\";\nimport url from \"../../utils/url\";\nimport { schema } from \"./entities/orders\";\nimport {\n  ORDER_TYPES,\n  getOrders as getAllOrders\n} from \"../../redux/modules/entities/orders\";\n\n// state\nconst initialState = {\n  currentTab: 0,\n  orders: {\n    isFetching: false,\n    ids: []\n  },\n  showConfirm: false,\n  isShowCommentSection: false,\n  currentOrder: {\n    id: null,\n    isDeleting: false,\n    isCommenting: false,\n    comment: \"\",\n    star: 0,\n    commentId: null\n  }\n};\n\n// actions\nconst types = {\n  // 获取订单数据\n  FETCH_ORDERS_REQUEST: \"USER/FETCH_ORDERS_REQUEST\",\n  FETCH_ORDERS_SUCCESS: \"USER/FETCH_ORDERS_SUCCESS\",\n  FETCH_ORDERS_FAILURE: \"USER/FETCH_ORDERS_FAILURE\",\n  // 设置当前激活的tab\n  SET_CURRENT_TAB: \"USER/SET_CURRENT_TAB\",\n  SET_SHOW_CONFIRM: \"USER/SET_SHOW_CONFIRM\",\n  // 删除订单\n  DELETE_ORDER_REQUEST: \"USER/DELETE_ORDER_REQUEST\",\n  DELETE_ORDER_SUCCESS: \"USER/DELETE_ORDER_SUCCESS\",\n  DELETE_ORDER_FAILURE: \"USER/DELETE_ORDER_FAILURE\",\n  MOCK_DELETE_ORDER: \"USER/MOCK_DELETE_ORDER\",\n  SET_CURRENT_ORDER_ID: \"USER/SET_CURRENT_ORDER_ID\",\n  SET_CURRENT_ORDER_COMMENT_ID: \"USER/SET_CURRENT_ORDER_COMMENT_ID\",\n  /*** 评价订单 ***/\n  // 显示/隐藏评价区域\n  SHOW_COMMENT_SECTION: \"USER/SHOW_COMMENT_SECTION\",\n  HIDE_COMMENT_SECTION: \"USER/HIDE_COMMENT_SECTION\",\n  // 设置评价内容\n  SET_COMMENT: \"USER/SET_COMMENT\",\n  // 设置评分\n  SET_STAR: \"USER/SET_STAR\",\n  // 提交评价\n  POST_COMMENT_REQUEST: \"USER/POST_COMMENT_REQUEST\",\n  POST_COMMENT_SUCCESS: \"USER/POST_COMMENT_SUCCESS\",\n  POST_COMMENT_FAILURE: \"USER/POST_COMMENT_FAILURE\",\n  // 重置当前订单\n  RESET_CURRENT_ORDER: \"USER/RESET_CURRENT_ORDER\"\n};\n\nexport const actions = {\n  // 获取订单数据\n  getOrders: () => ({\n    types: [\n      types.FETCH_ORDERS_REQUEST,\n      types.FETCH_ORDERS_SUCCESS,\n      types.FETCH_ORDERS_FAILURE\n    ],\n    shouldCallAPI: () => true,\n    callAPI: () => get(url.getOrders()),\n    schema\n  }),\n  resetCurrentOrder: () => ({\n    type: types.RESET_CURRENT_ORDER\n  }),\n  // 删除订单\n  deleteOrder: id => ({\n    types: [\n      types.DELETE_ORDER_REQUEST,\n      types.DELETE_ORDER_SUCCESS,\n      types.DELETE_ORDER_FAILURE\n    ],\n    callAPI: () => remove(url.deleteOrder(id))\n  }),\n  // 显示评价区域\n  showCommentSection: () => ({\n    type: types.SHOW_COMMENT_SECTION,\n    isShowCommentSection: true\n  }),\n  // 隐藏评价区域\n  hideCommentSection: () => ({\n    type: types.HIDE_COMMENT_SECTION,\n    isShowCommentSection: false\n  }),\n  // 设置评价内容\n  setComment: comment => ({\n    type: types.SET_COMMENT,\n    comment\n  }),\n  // 设置评价等级\n  setStar: star => ({\n    type: types.SET_STAR,\n    star\n  }),\n  postCommentRequest: () => ({\n    type: types.POST_COMMENT_REQUEST\n  }),\n  postCommentSuccess: ({ comment, star, id, commentId }) => ({\n    type: types.POST_COMMENT_SUCCESS,\n    comment,\n    star,\n    id,\n    commentId\n  }),\n\n  // 评价订单\n  commentOrder: commentObj => ({\n    types: [\n      types.POST_COMMENT_REQUEST,\n      types.POST_COMMENT_SUCCESS,\n      types.POST_COMMENT_FAILURE\n    ],\n    callAPI: () => post(url.addComment(), commentObj)\n  }),\n  // 设置当前激活的tab\n  setCurrentTab: tab => ({\n    type: types.SET_CURRENT_TAB,\n    tab\n  }),\n  setShowConfirm: isShow => ({\n    type: types.SET_SHOW_CONFIRM,\n    showConfirm: isShow\n  }),\n  setCurrentOrderId: id => ({\n    type: types.SET_CURRENT_ORDER_ID,\n    id\n  }),\n  setCurrentOrderCommentId: orders => ({\n    type: types.SET_CURRENT_ORDER_COMMENT_ID,\n    orders\n  })\n};\n\n// 删除订单\nconst currentOrderReducer = (state = initialState.currentOrder, action) => {\n  switch (action.type) {\n    case types.POST_COMMENT_REQUEST:\n      return {\n        ...state,\n        isCommenting: true\n      };\n    case types.POST_COMMENT_SUCCESS:\n      return {\n        ...state,\n        isCommenting: false\n      };\n    case types.POST_COMMENT_FAILURE:\n      return {\n        ...state,\n        isCommenting: false\n      };\n    case types.SET_CURRENT_ORDER_ID:\n      return {\n        ...state,\n        id: action.id\n      };\n    case types.SET_CURRENT_ORDER_COMMENT_ID:\n      const currentOrderId = state.id;\n      const commentId =\n        action.orders.find(order => order.id === currentOrderId).commentId ||\n        null;\n      return {\n        ...state,\n        commentId\n      };\n    case types.DELETE_ORDER_REQUEST:\n      return {\n        ...state,\n        isDeleting: true\n      };\n    case types.DELETE_ORDER_SUCCESS:\n      return {\n        ...state,\n        isDeleting: false\n      };\n    case types.DELETE_ORDER_FAILURE:\n      return {\n        ...state,\n        isDeleting: false\n      };\n    case types.SET_STAR:\n      return {\n        ...state,\n        star: action.star\n      };\n    case types.SET_COMMENT:\n      return {\n        ...state,\n        comment: action.comment\n      };\n    case types.RESET_CURRENT_ORDER:\n      return {\n        ...state,\n        id: null,\n        comment: \"\",\n        star: 0,\n        commentId: null\n      };\n    default:\n      return state;\n  }\n};\n\n// reducers\nconst ordersReducer = (state = initialState.orders, action) => {\n  switch (action.type) {\n    case types.FETCH_ORDERS_REQUEST:\n      return {\n        ...state,\n        isFetching: true\n      };\n    case types.FETCH_ORDERS_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        ids: action.response.ids\n      };\n    case types.FETCH_ORDERS_FAILURE:\n      return {\n        ...state,\n        isFetching: false,\n        ids: []\n      };\n    case types.MOCK_DELETE_ORDER:\n      const newIds = state.ids.filter(id => id !== action.id);\n      return {\n        ...state,\n        ids: newIds\n      };\n    default:\n      return state;\n  }\n};\n\nconst currentTabReducer = (state = initialState.currentTab, action) => {\n  switch (action.type) {\n    case types.SET_CURRENT_TAB:\n      return action.tab;\n    default:\n      return state;\n  }\n};\n\nconst showConfirmReducer = (state = initialState.showConfirm, action) => {\n  switch (action.type) {\n    case types.SET_SHOW_CONFIRM:\n      return action.showConfirm;\n    default:\n      return state;\n  }\n};\n\nconst isShowCommentSectionReducer = (\n  state = initialState.isShowCommentSection,\n  action\n) => {\n  switch (action.type) {\n    case types.SHOW_COMMENT_SECTION:\n    case types.HIDE_COMMENT_SECTION:\n      return action.isShowCommentSection;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  currentTab: currentTabReducer,\n  orders: ordersReducer,\n  showConfirm: showConfirmReducer,\n  currentOrder: currentOrderReducer,\n  isShowCommentSection: isShowCommentSectionReducer\n});\n\nconst orderTypes = [\n  ORDER_TYPES.ALL,\n  ORDER_TYPES.TO_PAY,\n  ORDER_TYPES.AVAILABLE,\n  ORDER_TYPES.REFUND\n];\n\n// selectors\nexport const getCurrentTab = state => state.user.currentTab;\nexport const getCurrentOrder = state => state.user.currentOrder;\nexport const getIsFetching = state => state.user.orders.isFetching;\nexport const getOrderIds = state => state.user.orders.ids;\nexport const getOrders = createSelector(\n  [getAllOrders, getOrderIds, getCurrentTab],\n  (_orders, ids, currentTab) => {\n    const type = orderTypes[currentTab];\n    const orders = ids.map(id => _orders[id]);\n    return type === 0 ? orders : orders.filter(order => order.type === type);\n  }\n);\n\nexport const getShowConfirm = state => state.user.showConfirm;\nexport const getIsShowCommentSection = state => state.user.isShowCommentSection;\nexport const getStar = state => {\n  const commentId = state.user.currentOrder.commentId;\n  return commentId\n    ? state.entities.comments[commentId] &&\n        state.entities.comments[commentId].star\n    : state.user.currentOrder.star;\n};\nexport const getComment = state => {\n  const commentId = state.user.currentOrder.commentId;\n  return commentId\n    ? state.entities.comments[commentId] &&\n        state.entities.comments[commentId].comment\n    : state.user.currentOrder.comment;\n};\n","import axios from \"axios\";\n\n// create axios instance\nconst ajax = axios.create({\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  },\n  timeout: 10000\n});\n\n// request interceptor\najax.interceptors.request.use(\n  config => config,\n  error => Promise.reject(error)\n);\n\n// response interceptor\najax.interceptors.response.use(\n  response => handleResponse(response),\n  err => Promise.reject(err)\n);\n\nconst handleResponse = response => {\n  const SUCCESS_CODES = [200, 201, 206];\n  if (SUCCESS_CODES.includes(response.status)) {\n    return Promise.resolve(response.data);\n  } else {\n    return Promise.reject({\n      error: { message: \"Request failed due to server error\" }\n    });\n  }\n};\n\n// http methods\nexport const get = (url, params) => ajax.get(url, params);\nexport const post = (url, data) => ajax.post(url, data);\nexport const put = (url, data) => ajax.put(url, data);\nexport const patch = (url, data) => ajax.patch(url, data);\nexport const remove = url => ajax.delete(url);\n","export default {\n  login: () => \"/login\",\n  getProductList: (path, page, pageSize) =>\n    `/product_${path}?_page=${page}&_limit=${pageSize}`,\n  getProductDetail: id => `/product_details/${id}`,\n  getShop: id => `/shops/${id}`,\n  getSearchKeywords: () => \"/keywords\",\n  getSearchedShops: keyword => `/searched_shops?keyword=${keyword}`,\n  getOrders: () => \"/orders?_sort=id&order=desc\",\n  addOrder: id => \"/orders\",\n  deleteOrder: id => `/orders/${id}`,\n  addComment: () => \"/comments\",\n  patchOrder: id => `/orders/${id}`\n};\n","import { get } from \"../../utils/request\";\nimport url from \"../../utils/url\";\nimport { schema as productSchema } from \"../modules/entities/products\";\nimport { combineReducers } from \"redux\";\n\nexport const params = {\n  PATH_LIKES: \"likes\",\n  PATH_DISCOUNTS: \"discounts\",\n  PAGE_SIZE_LIKES: 3,\n  PAGE_SIZE_DISCOUNTS: 3\n};\n\n// state\nconst initialState = {\n  likes: {\n    isFetching: false,\n    pageCount: 0,\n    ids: []\n  },\n  discounts: {\n    isFetching: false,\n    ids: []\n  }\n};\n\n// actions\nexport const types = {\n  // 获取猜你喜欢请求\n  FETCH_LIKES_REQUEST: \"HOME/FETCH_LIKES_REQUEST\",\n  // 获取猜你喜欢请求成功\n  FETCH_LIKES_SUCCESS: \"HOME/FETCH_LIKES_SUCCESS\",\n  // 获取猜你喜欢请求失败\n  FETCH_LIKES_FAILURE: \"HOME/FETCH_LIKES_FAILURE\",\n  // 获取超值特惠请求\n  FETCH_DISCOUNTS_REQUEST: \"HOME/FETCH_DISCOUNTS_REQUEST\",\n  // 获取超值特惠请求成功\n  FETCH_DISCOUNTS_SUCCESS: \"HOME/FETCH_DISCOUNTS_SUCCESS\",\n  // 获取超值特惠请求失败\n  FETCH_DISCOUNTS_FAILURE: \"HOME/FETCH_DISCOUNTS_FAILURE\"\n};\n\nexport const homeActions = {\n  fetchLikes: () => {\n    return (dispatch, getState) => {\n      const currentPage = getState().home.likes.pageCount + 1;\n\n      const action = {\n        types: [\n          types.FETCH_LIKES_REQUEST,\n          types.FETCH_LIKES_SUCCESS,\n          types.FETCH_LIKES_FAILURE\n        ],\n        shouldCallAPI: () => true,\n        callAPI: () =>\n          get(\n            url.getProductList(\n              params.PATH_LIKES,\n              currentPage,\n              params.PAGE_SIZE_LIKES\n            )\n          ),\n        schema: productSchema\n      };\n\n      return dispatch(action);\n    };\n  },\n  fetchDiscounts: () => {\n    return (dispatch, getState) => {\n      const action = {\n        types: [\n          types.FETCH_DISCOUNTS_REQUEST,\n          types.FETCH_DISCOUNTS_SUCCESS,\n          types.FETCH_DISCOUNTS_FAILURE\n        ],\n        shouldCallAPI: state => true,\n        callAPI: () =>\n          get(\n            url.getProductList(\n              params.PATH_DISCOUNTS,\n              1,\n              params.PAGE_SIZE_DISCOUNTS\n            )\n          ),\n        schema: productSchema\n      };\n\n      return dispatch(action);\n    };\n  }\n};\n\n// reducers\nconst likesReducer = (state = initialState.likes, action) => {\n  switch (action.type) {\n    case types.FETCH_LIKES_REQUEST:\n      return {\n        ...state,\n        isFetching: true\n      };\n    case types.FETCH_LIKES_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        pageCount: state.pageCount + 1,\n        ids: state.ids.concat(action.response.ids)\n      };\n    case types.FETCH_LIKES_FAILURE:\n      return {\n        ...state,\n        isFetching: false\n      };\n    default:\n      return state;\n  }\n};\n\nconst discountsReducer = (state = initialState.discounts, action) => {\n  switch (action.type) {\n    case types.FETCH_DISCOUNTS_REQUEST:\n      return {\n        ...state,\n        isFetching: true\n      };\n    case types.FETCH_DISCOUNTS_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        ids: action.response.ids\n      };\n    case types.FETCH_DISCOUNTS_FAILURE:\n      return {\n        ...state,\n        isFetching: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  likes: likesReducer,\n  discounts: discountsReducer\n});\n\n// selectors\nexport const getLikes = state =>\n  state.home.likes.ids.map(id => state.entities.products[id]);\nexport const getDiscounts = state =>\n  state.home.discounts.ids.map(id => state.entities.products[id]);\nexport const getLikesPageCount = state => state.home.likes.pageCount;\nexport const getIsFetchingLikes = state => state.home.likes.isFetching;\n","import { createSelector } from \"reselect\";\nimport { getProductDetail } from \"../modules/entities/products\";\nimport { ORDER_TYPES } from \"../modules/entities/orders\";\nimport { post } from \"../../utils/request\";\nimport url from \"../../utils/url\";\n// state\nconst initialState = {\n  // 订单购买数量\n  quantity: 1,\n  // 是否显示提示框\n  isShowTip: false,\n  isLoading: false\n};\n\n// actions\nconst types = {\n  SET_ORDER_QUANTITY: \"PURCHASE/SET_ORDER_QUANTITY\",\n  SHOW_TIP: \"PURCHASE/SHOW_TIP\",\n  HIDE_TIP: \"PURCHASE/HIDE_TIP\",\n  // 提交订单\n  SUBMIT_ORDER_REQUEST: \"PURCHASE/SUBMIT_ORDER_REQUEST\",\n  SUBMIT_ORDER_SUCCESS: \"PURCHASE/SUBMIT_ORDER_SUCCESS\",\n  SUBMIT_ORDER_FAILURE: \"PURCHASE/SUBMIT_ORDER_REQUEST\"\n};\n\nexport const actions = {\n  setOrderQuantity: quantity => ({\n    type: types.SET_ORDER_QUANTITY,\n    quantity\n  }),\n  hideTip: () => ({\n    type: types.HIDE_TIP\n  }),\n  submitOrder: productId => {\n    return (dispatch, getState) => {\n      dispatch({ type: types.SUBMIT_ORDER_REQUEST });\n      const product = getProductDetail(getState(), productId);\n      const quantity = getState().purchase.quantity;\n      const totalPrice = (product.currentPrice * quantity).toFixed(1);\n      const text1 = `${quantity}张 | 总价：￥${totalPrice}`;\n      const text2 = product.validityPeriod;\n\n      const order = {\n        statusText: \"待消费\",\n        orderPicUrl: product.picture,\n        channel: product.detail.category,\n        title: `${product.shop}:${product.product}`,\n        text: [text1, text2],\n        type: ORDER_TYPES.AVAILABLE,\n        time: Date.now()\n      };\n\n      return post(url.addOrder(), order)\n        .then(() => {\n          dispatch({\n            type: types.SUBMIT_ORDER_SUCCESS\n          });\n        })\n        .catch(() => {\n          dispatch({\n            type: types.SUBMIT_ORDER_FAILURE\n          });\n        });\n    };\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_ORDER_QUANTITY:\n      return {\n        ...state,\n        quantity: action.quantity\n      };\n    case types.HIDE_TIP:\n      return {\n        ...state,\n        isShowTip: false\n      };\n    case types.SUBMIT_ORDER_REQUEST:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case types.SUBMIT_ORDER_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isShowTip: true\n      };\n    case types.SUBMIT_ORDER_FAILURE:\n      return {\n        ...state,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n\n// selectors\nexport const getOrderQuantity = state => state.purchase.quantity;\nexport const getIsShowTip = state => state.purchase.isShowTip;\nexport const getProduct = (state, productId) =>\n  getProductDetail(state, productId);\n\nexport const getTotalPrice = createSelector(\n  [getProduct, getOrderQuantity],\n  (product, quantity) => {\n    return product ? (product.currentPrice * quantity).toFixed(1) : 0;\n  }\n);\n","const normalizeData = (data, schema) => {\n  const { id, name } = schema;\n  let obj = {};\n  let ids = [];\n  if (Array.isArray(data)) {\n    data.forEach(item => {\n      obj[item[id]] = item;\n      ids.push(item[id]);\n    });\n  } else {\n    obj[data[id]] = data;\n    ids.push(data[id]);\n  }\n\n  return {\n    [name]: obj,\n    ids\n  };\n};\n\nexport default function callAPIMiddleware({ dispatch, getState }) {\n  return next => action => {\n    const {\n      types,\n      schema,\n      callAPI,\n      shouldCallAPI = () => true,\n      payload = {}\n    } = action;\n\n    if (!types) {\n      // Normal action: pass it on\n      return next(action);\n    }\n\n    if (\n      !Array.isArray(types) ||\n      types.length !== 3 ||\n      !types.every(type => typeof type === \"string\")\n    ) {\n      throw new Error(\"Expected an array of three string types.\");\n    }\n\n    if (typeof callAPI !== \"function\") {\n      throw new Error(\"Expected callAPI to be a function.\");\n    }\n\n    if (!shouldCallAPI(getState())) {\n      return;\n    }\n\n    const [requestType, successType, failureType] = types;\n\n    dispatch(\n      Object.assign({}, payload, {\n        type: requestType\n      })\n    );\n\n    return callAPI().then(\n      response =>\n        dispatch(\n          Object.assign({}, payload, {\n            response: schema ? normalizeData(response, schema) : response,\n            type: successType\n          })\n        ),\n      error =>\n        dispatch(\n          Object.assign({}, payload, {\n            error,\n            type: failureType\n          })\n        )\n    );\n  };\n}\n","import createReducer from \"../../../utils/createReducer\";\n\nexport const schema = {\n  id: \"id\",\n  name: \"comments\"\n};\n\nexport const actions = {};\n\n// reducers\nconst reducer = createReducer(schema.name);\n\nexport default reducer;\n\n// selectors\nexport const getComments = state => state.entities.comments;\n","import { combineReducers } from \"redux\";\nimport products from \"./products\";\nimport shops from \"./shops\";\nimport keywords from \"./keywords\";\nimport orders from \"./orders\";\nimport comments from \"./comments\";\n\nexport default combineReducers({ products, shops, keywords, orders, comments });\n","// state\nconst initialState = {\n  error: null\n};\n\n// actions\nexport const types = {\n  CLEAR_ERROR: \"APP/CLEAR_ERROR\"\n};\n\nexport const actions = {\n  clearError: () => ({ type: types.CLEAR_ERROR })\n};\n\n// reducers\nconst reducer = (state = initialState, action) => {\n  const { type, error } = action;\n  if (type === types.CLEAR_ERROR) {\n    return { ...state, error: null };\n  } else if (error) {\n    return { ...state, error };\n  }\n\n  return state;\n};\n\nexport default reducer;\n\n// selectors\nexport const getError = state => state.app.error;\n","import { combineReducers } from \"redux\";\nimport entities from \"./entities\";\nimport app from \"./app\";\nimport login from \"./login\";\nimport home from \"./home\";\nimport detail from \"./detail\";\nimport purchase from \"./purchase\";\nimport search from \"./search\";\nimport user from \"./user\";\n\nexport default combineReducers({\n  entities,\n  app,\n  login,\n  user,\n  home,\n  detail,\n  purchase,\n  search\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport callAPIMiddleware from \"./middlewares/callAPI\";\nimport rootReducer from \"./modules\";\n\nlet store;\nconst logger = createLogger();\n\nif (\n  process.env.NODE_ENV !== \"production\" &&\n  window.__REDUX_DEVTOOLS_EXTENSION__\n) {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n  store = createStore(\n    rootReducer,\n    composeEnhancers(\n      applyMiddleware(thunkMiddleware, callAPIMiddleware, logger)\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    applyMiddleware(thunkMiddleware, callAPIMiddleware)\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass ErrorToast extends Component {\n  render() {\n    const { msg } = this.props;\n    return (\n      <div className=\"error-toast\">\n        <div className=\"error-toast__text\">{msg}</div>\n      </div>\n    );\n  }\n  componentDidMount() {\n    this.timer = setTimeout(() => {\n      this.props.clearError();\n    }, 3000);\n  }\n  componentWillUnmount() {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n  }\n}\n\nexport default ErrorToast;\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getLogged } from \"../../redux/modules/login\";\n\nclass PrivateRoute extends Component {\n  render() {\n    const { children, logged, ...rest } = this.props;\n\n    return (\n      <Route\n        {...rest}\n        render={({ location }) =>\n          logged ? (\n            children\n          ) : (\n            <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n          )\n        }\n      ></Route>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  logged: getLogged(state)\n});\n\nexport default connect(mapStateToProps, null)(PrivateRoute);\n","import React, { Component } from \"react\";\n\nexport default function AsyncComponent(importComponent) {\n  class AsyncComponent extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        Comp: null\n      };\n    }\n    componentDidMount() {\n      importComponent().then(module => {\n        this.setState({\n          Comp: module.default\n        });\n      });\n    }\n    render() {\n      const { Comp } = this.state;\n      return Comp ? <Comp {...this.props} /> : null;\n    }\n  }\n\n  return AsyncComponent;\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { actions as appActions, getError } from \"../../redux/modules/app\";\nimport \"./style.css\";\nimport ErrorToast from \"../../components/ErrorToast\";\nimport PrivateRoute from \"../../components/PrivateRoute\";\nimport AsyncComponent from \"../../components/AsyncComponent\";\n\nconst Home = AsyncComponent(() => import(\"../Home\"));\nconst ProductDetail = AsyncComponent(() => import(\"../ProductDetail\"));\nconst Search = AsyncComponent(() => import(\"../Search\"));\nconst SearchResult = AsyncComponent(() => import(\"../SearchResult\"));\nconst Login = AsyncComponent(() => import(\"../Login\"));\nconst User = AsyncComponent(() => import(\"../User\"));\nconst Purchase = AsyncComponent(() => import(\"../Purchase\"));\n\nclass App extends React.Component {\n  render() {\n    const {\n      error,\n      appActions: { clearError }\n    } = this.props;\n    const basename = process.env.PUBLIC_URL;\n\n    return (\n      <div className=\"App\">\n        <Router basename={basename}>\n          <Switch>\n            <Route path=\"/search_result\">\n              <SearchResult />\n            </Route>\n            <Route path=\"/search\">\n              <Search />\n            </Route>\n            <PrivateRoute path=\"/purchase/:id\">\n              <Purchase />\n            </PrivateRoute>\n            <Route path=\"/detail/:id\">\n              <ProductDetail />\n            </Route>\n            <PrivateRoute path=\"/user\">\n              <User />\n            </PrivateRoute>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n        {error && <ErrorToast msg={error} clearError={clearError} />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: getError(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    appActions: bindActionCreators(appActions, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./containers/App/index.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}